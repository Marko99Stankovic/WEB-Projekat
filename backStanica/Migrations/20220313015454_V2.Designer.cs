// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backStanica.Models;

namespace backStanica.Migrations
{
    [DbContext(typeof(StanicaContext))]
    [Migration("20220313015454_V2")]
    partial class V2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("backStanica.Models.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("BrojTelefona")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("BrojTelefona");

                    b.Property<string>("ImeKorisnika")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ImeKorisnika");

                    b.Property<int?>("LokacijaID")
                        .HasColumnType("int");

                    b.Property<string>("PrezKorisnika")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PrezKorisnika");

                    b.HasKey("ID");

                    b.HasIndex("LokacijaID");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("backStanica.Models.Lokacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int")
                        .HasColumnName("Kapacitet");

                    b.Property<int>("MaxKapacitet")
                        .HasColumnType("int")
                        .HasColumnName("MaxKapacitet");

                    b.Property<int?>("StanicaID")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int")
                        .HasColumnName("X");

                    b.Property<int>("Y")
                        .HasColumnType("int")
                        .HasColumnName("Y");

                    b.HasKey("ID");

                    b.HasIndex("StanicaID");

                    b.ToTable("Lokacija");
                });

            modelBuilder.Entity("backStanica.Models.Stanica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int>("Kapacitet")
                        .HasColumnType("int")
                        .HasColumnName("Kapacitet");

                    b.Property<int>("M")
                        .HasColumnType("int")
                        .HasColumnName("M");

                    b.Property<int>("N")
                        .HasColumnType("int")
                        .HasColumnName("N");

                    b.Property<string>("NazivStanice")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("NazivStanice");

                    b.HasKey("ID");

                    b.ToTable("Stanica");
                });

            modelBuilder.Entity("backStanica.Models.Vozilo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int?>("KorisnikID")
                        .HasColumnType("int");

                    b.Property<int?>("LokacijaID")
                        .HasColumnType("int");

                    b.Property<string>("ModelVozila")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ModelVozila");

                    b.Property<string>("Registarska")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Registarska");

                    b.Property<string>("Tip")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Tip");

                    b.HasKey("ID");

                    b.HasIndex("KorisnikID");

                    b.HasIndex("LokacijaID");

                    b.ToTable("Vozilo");
                });

            modelBuilder.Entity("backStanica.Models.Korisnik", b =>
                {
                    b.HasOne("backStanica.Models.Lokacija", "Lokacija")
                        .WithMany("Korisnici")
                        .HasForeignKey("LokacijaID");

                    b.Navigation("Lokacija");
                });

            modelBuilder.Entity("backStanica.Models.Lokacija", b =>
                {
                    b.HasOne("backStanica.Models.Stanica", "Stanica")
                        .WithMany("Lokacije")
                        .HasForeignKey("StanicaID");

                    b.Navigation("Stanica");
                });

            modelBuilder.Entity("backStanica.Models.Vozilo", b =>
                {
                    b.HasOne("backStanica.Models.Korisnik", "Korisnik")
                        .WithMany("Vozila")
                        .HasForeignKey("KorisnikID");

                    b.HasOne("backStanica.Models.Lokacija", "Lokacija")
                        .WithMany("Vozila")
                        .HasForeignKey("LokacijaID");

                    b.Navigation("Korisnik");

                    b.Navigation("Lokacija");
                });

            modelBuilder.Entity("backStanica.Models.Korisnik", b =>
                {
                    b.Navigation("Vozila");
                });

            modelBuilder.Entity("backStanica.Models.Lokacija", b =>
                {
                    b.Navigation("Korisnici");

                    b.Navigation("Vozila");
                });

            modelBuilder.Entity("backStanica.Models.Stanica", b =>
                {
                    b.Navigation("Lokacije");
                });
#pragma warning restore 612, 618
        }
    }
}
